name: Release Workflow

on:
  release:
    types: [published]

jobs:
  verify-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: pip install poetry

      - name: Extract tag version
        id: get_tag_version
        run: echo "::set-output name=tag_version::${GITHUB_REF#refs/tags/v}"

      - name: Get current package version
        id: get_package_version
        run: echo "::set-output name=package_version::$(poetry version --short)"

      - name: Verify versions match
        run: |
          if [ "${{ steps.get_tag_version.outputs.tag_version }}" != "${{ steps.get_package_version.outputs.package_version }}" ]; then
            echo "Error: Tag version does not match the pyproject.toml version"
            exit 1
          fi

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry build
          poetry publish

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-alpha') || contains(github.ref, '-beta') }}